from scamplepy.update import * # noqa: F403
from ..common import * # noqa: F403
from uuid import * # noqa: F403
# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import scamplepy.common
import typing
import uuid

class LabUpdate:
    @property
    def fields(self) -> LabUpdateFields: ...
    @property
    def add_members(self) -> builtins.list[uuid.UUID]: ...
    @property
    def remove_members(self) -> builtins.list[uuid.UUID]: ...
    @fields.setter
    def fields(self, value: LabUpdateFields) -> None: ...
    @add_members.setter
    def add_members(self, value: builtins.list[uuid.UUID]) -> None: ...
    @remove_members.setter
    def remove_members(self, value: builtins.list[uuid.UUID]) -> None: ...

class LabUpdateFields:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def name(self) -> typing.Optional[builtins.str]: ...
    @property
    def pi_id(self) -> typing.Optional[uuid.UUID]: ...
    @property
    def delivery_dir(self) -> typing.Optional[builtins.str]: ...
    @id.setter
    def id(self, value: uuid.UUID) -> None: ...
    @name.setter
    def name(self, value: typing.Optional[builtins.str]) -> None: ...
    @pi_id.setter
    def pi_id(self, value: typing.Optional[uuid.UUID]) -> None: ...
    @delivery_dir.setter
    def delivery_dir(self, value: typing.Optional[builtins.str]) -> None: ...
    def __eq__(self, other:builtins.object) -> builtins.bool: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> LabUpdateFields: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> LabUpdateFields: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> LabUpdateFields: ...

class PersonUpdate:
    @property
    def grant_roles(self) -> builtins.list[UserRole]: ...
    @property
    def revoke_roles(self) -> builtins.list[UserRole]: ...
    @property
    def fields(self) -> PersonUpdateFields: ...
    @grant_roles.setter
    def grant_roles(self, value: builtins.list[UserRole]) -> None: ...
    @revoke_roles.setter
    def revoke_roles(self, value: builtins.list[UserRole]) -> None: ...
    @fields.setter
    def fields(self, value: PersonUpdateFields) -> None: ...

class PersonUpdateFields:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def name(self) -> typing.Optional[builtins.str]: ...
    @property
    def email(self) -> typing.Optional[builtins.str]: ...
    @property
    def ms_user_id(self) -> typing.Optional[uuid.UUID]: ...
    @property
    def orcid(self) -> typing.Optional[builtins.str]: ...
    @property
    def institution_id(self) -> typing.Optional[uuid.UUID]: ...
    @id.setter
    def id(self, value: uuid.UUID) -> None: ...
    @name.setter
    def name(self, value: typing.Optional[builtins.str]) -> None: ...
    @email.setter
    def email(self, value: typing.Optional[builtins.str]) -> None: ...
    @ms_user_id.setter
    def ms_user_id(self, value: typing.Optional[uuid.UUID]) -> None: ...
    @orcid.setter
    def orcid(self, value: typing.Optional[builtins.str]) -> None: ...
    @institution_id.setter
    def institution_id(self, value: typing.Optional[uuid.UUID]) -> None: ...
    def __eq__(self, other:builtins.object) -> builtins.bool: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> PersonUpdateFields: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> PersonUpdateFields: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> PersonUpdateFields: ...

