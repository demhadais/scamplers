from scamplepy.query import * # noqa:403
from ..common import * # noqa:403
# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import datetime
import scamplepy.common
import typing
import uuid

class InstitutionQuery:
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> InstitutionQuery: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> InstitutionQuery: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> InstitutionQuery: ...

class LabQuery:
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> LabQuery: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> LabQuery: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> LabQuery: ...

class OrderBy:
    @property
    def field(self) -> builtins.str: ...
    @property
    def descending(self) -> builtins.bool: ...
    @field.setter
    def field(self, value: builtins.str) -> None: ...
    @descending.setter
    def descending(self, value: builtins.bool) -> None: ...

class Pagination:
    @property
    def limit(self) -> builtins.int: ...
    @property
    def offset(self) -> builtins.int: ...
    @limit.setter
    def limit(self, value: builtins.int) -> None: ...
    @offset.setter
    def offset(self, value: builtins.int) -> None: ...

class PersonQuery:
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> PersonQuery: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> PersonQuery: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> PersonQuery: ...

class SpecimenQuery:
    def __new__(cls, *, ids:typing.Sequence[uuid.UUID]=[], name:typing.Optional[builtins.str]=None, submitters:typing.Sequence[uuid.UUID]=[], labs:typing.Sequence[uuid.UUID]=[], received_before:typing.Optional[datetime.datetime]=None, received_after:typing.Optional[datetime.datetime]=None, species:typing.Sequence[Species]=[], notes:typing.Optional[builtins.str]=None, type_:typing.Sequence[SpecimenType]=[], embedded_in:typing.Sequence[FixedBlockEmbeddingMatrix | FrozenBlockEmbeddingMatrix]=[], fixatives:typing.Sequence[BlockFixative | SuspensionFixative | TissueFixative]=[], storage_buffer:typing.Optional[builtins.str]=None, frozen:typing.Optional[builtins.bool]=None, cryopreserved:typing.Optional[builtins.bool]=None, order_by:typing.Sequence[OrderBy]=[], pagination:Pagination=...) -> SpecimenQuery: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SpecimenQuery: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SpecimenQuery: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SpecimenQuery: ...

