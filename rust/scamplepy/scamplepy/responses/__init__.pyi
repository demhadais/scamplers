from scamplepy.responses import * # noqa:403
from ..common import * # noqa:403
# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import datetime
import scamplepy.common
import typing
import uuid

class CommitteeApproval:
    @property
    def institution_id(self) -> uuid.UUID: ...
    @property
    def specimen_id(self) -> uuid.UUID: ...
    @property
    def institution(self) -> Institution: ...
    @property
    def committee_type(self) -> builtins.str: ...
    @property
    def compliance_identifier(self) -> builtins.str: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> CommitteeApproval: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> CommitteeApproval: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> CommitteeApproval: ...

class Institution:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def links(self) -> builtins.dict[builtins.str, builtins.str]: ...
    @property
    def name(self) -> builtins.str: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> Institution: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> Institution: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> Institution: ...

class Lab:
    @property
    def info(self) -> LabSummaryWithParents: ...
    @property
    def members(self) -> builtins.list[PersonSummary]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> Lab: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> Lab: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> Lab: ...

class LabSummary:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def links(self) -> builtins.dict[builtins.str, builtins.str]: ...
    @property
    def name(self) -> builtins.str: ...
    @property
    def delivery_dir(self) -> builtins.str: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> LabSummary: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> LabSummary: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> LabSummary: ...

class LabSummaryWithParents:
    @property
    def id_(self) -> uuid.UUID: ...
    @property
    def summary(self) -> LabSummary: ...
    @property
    def pi(self) -> PersonSummary: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> LabSummaryWithParents: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> LabSummaryWithParents: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> LabSummaryWithParents: ...

class MultiplexingTag:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def tag_id(self) -> builtins.str: ...
    @property
    def type_(self) -> builtins.str: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> MultiplexingTag: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> MultiplexingTag: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> MultiplexingTag: ...

class Person:
    @property
    def info(self) -> PersonSummaryWithParents: ...
    @property
    def roles(self) -> builtins.list[UserRole]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> Person: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> Person: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> Person: ...

class PersonSummary:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def links(self) -> builtins.dict[builtins.str, builtins.str]: ...
    @property
    def name(self) -> builtins.str: ...
    @property
    def email(self) -> typing.Optional[builtins.str]: ...
    @property
    def orcid(self) -> typing.Optional[builtins.str]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> PersonSummary: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> PersonSummary: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> PersonSummary: ...

class PersonSummaryWithParents:
    @property
    def id_(self) -> uuid.UUID: ...
    @property
    def summary(self) -> PersonSummary: ...
    @property
    def institution(self) -> Institution: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> PersonSummaryWithParents: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> PersonSummaryWithParents: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> PersonSummaryWithParents: ...

class Specimen:
    @property
    def info(self) -> SpecimenSummaryWithParents: ...
    @property
    def measurements(self) -> builtins.list[SpecimenMeasurement]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> Specimen: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> Specimen: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> Specimen: ...

class SpecimenMeasurement:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def specimen_id(self) -> uuid.UUID: ...
    @property
    def measured_by(self) -> uuid.UUID: ...
    @property
    def data(self) -> SpecimenMeasurementData: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SpecimenMeasurement: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SpecimenMeasurement: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SpecimenMeasurement: ...

class SpecimenSummary:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def links(self) -> builtins.dict[builtins.str, builtins.str]: ...
    @property
    def readable_id(self) -> builtins.str: ...
    @property
    def name(self) -> builtins.str: ...
    @property
    def received_at(self) -> datetime.datetime: ...
    @property
    def species(self) -> builtins.list[typing.Optional[builtins.str]]: ...
    @property
    def notes(self) -> typing.Optional[builtins.str]: ...
    @property
    def returned_at(self) -> typing.Optional[datetime.datetime]: ...
    @property
    def type_(self) -> SpecimenType: ...
    @property
    def embedded_in(self) -> typing.Optional[builtins.str]: ...
    @property
    def fixative(self) -> typing.Optional[builtins.str]: ...
    @property
    def frozen(self) -> builtins.bool: ...
    @property
    def cryopreserved(self) -> builtins.bool: ...
    @property
    def storage_buffer(self) -> typing.Optional[builtins.str]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SpecimenSummary: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SpecimenSummary: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SpecimenSummary: ...

class SpecimenSummaryWithParents:
    @property
    def id_(self) -> uuid.UUID: ...
    @property
    def summary(self) -> SpecimenSummary: ...
    @property
    def lab(self) -> LabSummary: ...
    @property
    def submitted_by(self) -> PersonSummary: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SpecimenSummaryWithParents: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SpecimenSummaryWithParents: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SpecimenSummaryWithParents: ...

class Suspension:
    @property
    def info(self) -> SuspensionSummaryWithParents: ...
    @property
    def preparers(self) -> builtins.list[uuid.UUID]: ...
    @property
    def measurements(self) -> builtins.list[SuspensionMeasurement]: ...

class SuspensionMeasurement:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def measured_by(self) -> uuid.UUID: ...
    @property
    def suspension_id(self) -> uuid.UUID: ...
    @property
    def data(self) -> SuspensionMeasurementData: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SuspensionMeasurement: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SuspensionMeasurement: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SuspensionMeasurement: ...

class SuspensionSummary:
    @property
    def id(self) -> uuid.UUID: ...
    @property
    def links(self) -> builtins.dict[builtins.str, builtins.str]: ...
    @property
    def readable_id(self) -> builtins.str: ...
    @property
    def biological_material(self) -> builtins.str: ...
    @property
    def created_at(self) -> typing.Optional[datetime.datetime]: ...
    @property
    def lysis_duration_minutes(self) -> typing.Optional[builtins.float]: ...
    @property
    def target_cell_recovery(self) -> builtins.float: ...
    @property
    def target_reads_per_cell(self) -> builtins.int: ...
    @property
    def notes(self) -> typing.Optional[builtins.str]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SuspensionSummary: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SuspensionSummary: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SuspensionSummary: ...

class SuspensionSummaryWithParents:
    @property
    def id_(self) -> uuid.UUID: ...
    @property
    def summary(self) -> SuspensionSummary: ...
    @property
    def parent_specimen(self) -> SpecimenSummary: ...
    @property
    def multiplexing_tag(self) -> typing.Optional[MultiplexingTag]: ...
    def to_json_bytes(self) -> builtins.list[builtins.int]: ...
    def to_json_string(self) -> builtins.str: ...
    def to_base64_json(self) -> builtins.str: ...
    @staticmethod
    def from_json_bytes(json_bytes:typing.Sequence[builtins.int]) -> SuspensionSummaryWithParents: ...
    @staticmethod
    def from_json_string(json_str:builtins.str) -> SuspensionSummaryWithParents: ...
    @staticmethod
    def from_base64_json(base64_json_bytes:builtins.str) -> SuspensionSummaryWithParents: ...

